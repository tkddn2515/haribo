{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "txHash": "0xb92d92f0dc636fc5f1a578040fe8f871e94f8f4262886c4d53613531cb81de76",
    "deployTransaction": {
      "hash": "0xb92d92f0dc636fc5f1a578040fe8f871e94f8f4262886c4d53613531cb81de76",
      "type": 2,
      "accessList": [],
      "blockHash": "0x141067b562be9249b5190ae5b2721c3d24f2108dbd11ef7c91f2167843956f86",
      "blockNumber": 3,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x658a5ed7"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x8f79f3ae"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xe8f67e80bf66123e11bae56d34d2655bc124369e50d7b54dc290ad42a11bb087",
      "s": "0x1f343e6b51c78f90744d4eb207159dab57cb5b80e9650bfbbb404254925431eb",
      "v": 1,
      "creates": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xa87d45db830f91f81a93924fed42f87ed9d76afe6b0683627ac994e869f535f9",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xc3248d04bfa8cda572a12c38b5d72e074ce9123929c3f4c4cba943cfc2baf7e9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "66b45a35ec262931fb264b47e19ae79c06bc1904b6afae2b55270cfd2ba9268f": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x8fab505036a19c0d12c1502b66be7e17889440143bd210cc6894f71010a8fe79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "Haribo",
            "label": "erc20",
            "type": "t_contract(ERC20)3929",
            "src": "contracts\\Haribo.sol:62"
          },
          {
            "contract": "Haribo",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\Haribo.sol:64"
          },
          {
            "contract": "Haribo",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\Haribo.sol:65"
          },
          {
            "contract": "Haribo",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts\\Haribo.sol:66"
          },
          {
            "contract": "Haribo",
            "label": "defaultHp",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:66"
          },
          {
            "contract": "Haribo",
            "label": "defaultHungry",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:67"
          },
          {
            "contract": "Haribo",
            "label": "defaultThirst",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:69"
          },
          {
            "contract": "Haribo",
            "label": "defaultLevel",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:69"
          },
          {
            "contract": "Haribo",
            "label": "defaultBattleHp",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:70"
          },
          {
            "contract": "Haribo",
            "label": "defaultBattleAtt",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:71"
          },
          {
            "contract": "Haribo",
            "label": "defaultBattleDef",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:71"
          },
          {
            "contract": "Haribo",
            "label": "defaultBattleCriPer",
            "type": "t_uint8",
            "src": "contracts\\Haribo.sol:72"
          },
          {
            "contract": "Haribo",
            "label": "defaultBattleCriAttIncrease",
            "type": "t_uint16",
            "src": "contracts\\Haribo.sol:74"
          },
          {
            "contract": "Haribo",
            "label": "liveFee",
            "type": "t_uint32",
            "src": "contracts\\Haribo.sol:79"
          },
          {
            "contract": "Haribo",
            "label": "hpFeePer",
            "type": "t_uint32",
            "src": "contracts\\Haribo.sol:79"
          },
          {
            "contract": "Haribo",
            "label": "hungryFeePer",
            "type": "t_uint32",
            "src": "contracts\\Haribo.sol:83"
          },
          {
            "contract": "Haribo",
            "label": "thirstFeePer",
            "type": "t_uint32",
            "src": "contracts\\Haribo.sol:86"
          },
          {
            "contract": "Haribo",
            "label": "avatars",
            "type": "t_mapping(t_address,t_struct(Avatar)4100_storage)",
            "src": "contracts\\Haribo.sol:89"
          }
        ],
        "types": {
          "t_contract(ERC20)3929": {
            "label": "contract ERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_struct(Avatar)4100_storage)": {
            "label": "mapping(address => struct Avatar)"
          },
          "t_struct(Avatar)4100_storage": {
            "label": "struct Avatar",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "nickname",
                "type": "t_string_storage"
              },
              {
                "label": "hp",
                "type": "t_uint8"
              },
              {
                "label": "hungry",
                "type": "t_uint8"
              },
              {
                "label": "thirst",
                "type": "t_uint8"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "battle_hp",
                "type": "t_uint8"
              },
              {
                "label": "battle_att",
                "type": "t_uint8"
              },
              {
                "label": "battle_def",
                "type": "t_uint8"
              },
              {
                "label": "battle_cri_per",
                "type": "t_uint8"
              },
              {
                "label": "battle_cri_att_increase",
                "type": "t_uint16"
              },
              {
                "label": "exp",
                "type": "t_uint16"
              },
              {
                "label": "fill_hungry_time",
                "type": "t_uint256"
              },
              {
                "label": "fill_thirst_time",
                "type": "t_uint256"
              },
              {
                "label": "battle_win_count",
                "type": "t_uint256"
              },
              {
                "label": "battle_lose_count",
                "type": "t_uint256"
              },
              {
                "label": "is_dead",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
